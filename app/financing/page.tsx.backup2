"use client"

import type React from "react"

import { useState, useEffect } from "react"
import { useRouter } from "next/navigation"
import {
  ArrowRight,
  Calendar,
  CreditCard,
  Download,
  Info,
  PiggyBank,
  Wallet,
  Settings,
  X,
  Plus,
  Minus,
  ChevronDown,
  Battery,
  Car,
  Check,
  Sun,
  Zap,
  TrendingDown,
  Sparkles,
  Shield,
  Timer,
  Award,
  Calculator,
} from "lucide-react"
import { Button } from "@/components/ui/button"
import { Card, CardContent } from "@/components/ui/card"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
import { StepBadges } from "@/components/step-badges"
import { AppHeader } from "@/components/app-header"
import { AvatarAssistant } from "@/components/avatar-assistant"
import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from "@/components/ui/tooltip"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"
import { SignupModal } from "@/components/signup-modal"
import { Switch } from "@/components/ui/switch"
import { cn } from "@/lib/utils"
import { extractCounty, getTierByCounty, median } from "@/lib/helper"

interface LoanOption {
  term: number
  monthlyPayment: number
  interestRate: number
  totalInterest: number
  totalCost: number
  downPayment: number
}

interface LoanOptions {
  [key: string]: LoanOption
}

interface AddonOption {
  name: string
  cost: number
  monthlyContribution: {
    "3": number
    "5": number
    "10": number
  }
  icon: React.ReactNode
  description: string
  enabled: boolean
}

export default function FinancingPage() {
  const router = useRouter()
  const [selectedTerm, setSelectedTerm] = useState("5")
  const [showSignupModal, setShowSignupModal] = useState(false)
  const [showCustomizeModal, setShowCustomizeModal] = useState(false)
  const [customDownPayment, setCustomDownPayment] = useState(0)
  const [customTerm, setCustomTerm] = useState(5)
  const [isCustomized, setIsCustomized] = useState(false)
  const [isLoanDetailsExpanded, setIsLoanDetailsExpanded] = useState(false)
  const [animateComparison, setAnimateComparison] = useState(false)
  const [baseSolarCost, setBaseSolarCost] = useState(10200)
  // Store original localStorage values to preserve them when toggling on
  const [originalBatteryInterest, setOriginalBatteryInterest] = useState<string>("no")
  const [originalEvOwnership, setOriginalEvOwnership] = useState<string>("no")
  const [isGrantDetailsExpanded, setIsGrantDetailsExpanded] = useState(false)

  // Scroll to top when component mounts
  useEffect(() => {
    window.scrollTo(0, 0)

    // Trigger animation after a short delay
    const timer = setTimeout(() => {
      setAnimateComparison(true)
    }, 500)

    return () => clearTimeout(timer)
  }, [])

  useEffect(() => {
    if (typeof window !== 'undefined') {
      const saved = localStorage.getItem("personalise_answers");
      if (saved) {
        try {
          const answers = JSON.parse(saved);
          if (typeof answers.solarPrice === "number") {
            setBaseSolarCost(answers.solarPrice);
          }
        } catch {}
      }
    }
  }, []);

  // Update localStorage with correct battery price on mount
  useEffect(() => {
    if (typeof window !== 'undefined') {
      const saved = localStorage.getItem("personalise_answers");
      if (saved) {
        try {
          const answers = JSON.parse(saved);
          // Updated logic: "yes" or "unsure" should enable battery
          const batteryInterest = answers.batteryInterest?.toLowerCase();
          const batteryEnabled = batteryInterest === "yes" || batteryInterest === "unsure";
          
          if (batteryEnabled && answers.batteryPrice !== 3000) {
            answers.batteryPrice = 3000;
            // Recalculate total cost
            const baseSolarCost = answers.solarPrice ?? 10200;
            const batteryCost = batteryEnabled ? 3000 : 0;
            // Updated logic for EV cost calculation
            const evOwnership = answers.evOwnership?.toLowerCase();
            const evEnabled = evOwnership === "yes" || evOwnership === "planning";
            const evCost = evEnabled ? (answers.evPrice ?? 0) : 0;
            answers.totalCost = baseSolarCost + batteryCost + evCost;
            localStorage.setItem("personalise_answers", JSON.stringify(answers));
          }
        } catch {}
      }
    }
  }, []);

  // System cost and savings data
  
  const annualSavings = (() => {
    if (typeof window !== 'undefined') {
      const saved = localStorage.getItem("business_proposal");
      if (saved) {
        try {
          const proposal = JSON.parse(saved);
          if (typeof proposal.electricity_bill_savings === "number") {
            return Math.round(proposal.electricity_bill_savings);
          }
        } catch {}
      }
    }
    return 0; // Default value if not found
  })();

  const monthlySavings = annualSavings ? Math.round(annualSavings / 12) : 100;

  // Helper to get initial addon state from localStorage
  const getInitialAddons = (): AddonOption[] => {
    let batteryEnabled = true;
    let evEnabled = true;
    let batteryCost = 3000;
    let evCost = 1800;
    if (typeof window !== 'undefined') {
      const saved = localStorage.getItem("personalise_answers");
      if (saved) {
        try {
          const answers = JSON.parse(saved);
          if (typeof answers.batteryInterest === "string") {
            // Determine if enabled based on localStorage value
            const batteryInterest = answers.batteryInterest.toLowerCase();
            batteryEnabled = batteryInterest === "yes" || batteryInterest === "unsure";
          }
          if (typeof answers.evOwnership === "string") {
            // Determine if enabled based on localStorage value
            const evOwnership = answers.evOwnership.toLowerCase();
            evEnabled = evOwnership === "yes" || evOwnership === "planning";
          }
          // Always use 3000 for battery cost when enabled, don't read from localStorage
          // to avoid old incorrect values
          if (typeof answers.evPrice === "number") {
            evCost = answers.evPrice;
          }
        } catch {}
      }
    }
    return [
      {
        name: "Home Battery",
        cost: 3000, // Always use 3000 for battery
        monthlyContribution: {
          "3": 87,
          "5": 56,
          "10": 31,
        },
        icon: <Battery className="h-5 w-5" />,
        description: "Store excess energy and use it when you need it",
        enabled: batteryEnabled,
      },
      {
        name: "EV Charger",
        cost: evCost,
        monthlyContribution: {
          "3": 52,
          "5": 34,
          "10": 19,
        },
        icon: <Car className="h-5 w-5" />,
        description: "Charge your electric vehicle at home",
        enabled: evEnabled,
      },
    ];
  };

  const [addons, setAddons] = useState<AddonOption[]>(getInitialAddons());

  // Set original values in useEffect to avoid re-render loops
  useEffect(() => {
    if (typeof window !== 'undefined') {
      const saved = localStorage.getItem("personalise_answers");
      if (saved) {
        try {
          const answers = JSON.parse(saved);
          if (typeof answers.batteryInterest === "string") {
            setOriginalBatteryInterest(answers.batteryInterest);
          }
          if (typeof answers.evOwnership === "string") {
            setOriginalEvOwnership(answers.evOwnership);
          }
        } catch {}
      }
    }
  }, []); // Empty dependency array - only run once on mount

  // Calculate total system cost based on enabled addons
  const calculateSystemCost = () => {
    let solarPrice = 10200;
    if (typeof window !== 'undefined') {
      const saved = localStorage.getItem("personalise_answers");
      if (saved) {
        try {
          const answers = JSON.parse(saved);
          solarPrice = answers.solarPrice ?? 10200;
        } catch {}
      }
    }
    return (
      (addons.find(a => a.name === "Home Battery")?.enabled ? (addons.find(a => a.name === "Home Battery")?.cost ?? 0) : 0) +
      (addons.find(a => a.name === "EV Charger")?.enabled ? (addons.find(a => a.name === "EV Charger")?.cost ?? 0) : 0) +
      solarPrice
    )
  }

  const systemCost = calculateSystemCost()

  // Default loan options
  const getDefaultLoanOptions = (): LoanOptions => {
    return {
      "3": {
        term: 3,
        monthlyPayment:
          295 + addons.reduce((total, addon) => (addon.enabled ? total + addon.monthlyContribution["3"] : total), 0),
        interestRate: 3.9,
        totalInterest: Math.round(systemCost * 0.08),
        totalCost: systemCost + Math.round(systemCost * 0.08),
        downPayment: 0,
      },
      "5": {
        term: 5,
        monthlyPayment:
          192 + addons.reduce((total, addon) => (addon.enabled ? total + addon.monthlyContribution["5"] : total), 0),
        interestRate: 4.2,
        totalInterest: Math.round(systemCost * 0.13),
        totalCost: systemCost + Math.round(systemCost * 0.13),
        downPayment: 0,
      },
      "10": {
        term: 10,
        monthlyPayment:
          107 + addons.reduce((total, addon) => (addon.enabled ? total + addon.monthlyContribution["10"] : total), 0),
        interestRate: 4.5,
        totalInterest: Math.round(systemCost * 0.26),
        totalCost: systemCost + Math.round(systemCost * 0.26),
        downPayment: 0,
      },
    }
  }

  // Custom loan options (will be updated based on user input)
  const [loanOptions, setLoanOptions] = useState<LoanOptions>(getDefaultLoanOptions())
  const [customMonthlyPayment, setCustomMonthlyPayment] = useState(0)

  const selectedLoan = loanOptions[selectedTerm]
  const netMonthlyCost = selectedLoan.monthlyPayment - monthlySavings

  // Update loan options when addons change
  useEffect(() => {
    if (!isCustomized) {
      setLoanOptions(getDefaultLoanOptions())
    } else {
      // Recalculate with custom settings but updated addon costs
      const remainingAmount = systemCost - customDownPayment

      const calculateMonthlyPayment = (principal: number, rate: number, years: number) => {
        const monthlyRate = rate / 100 / 12
        const numPayments = years * 12
        return (principal * monthlyRate) / (1 - Math.pow(1 + monthlyRate, -numPayments))
      }

      const getInterestRate = (years: number) => {
        if (years <= 3) return 3.9
        if (years <= 5) return 4.2
        return 4.5
      }

      const interestRate = 6.5
      const monthlyPayment = Math.round(calculateMonthlyPayment(remainingAmount, interestRate, customTerm))
      const totalInterest = Math.round(monthlyPayment * customTerm * 12 - remainingAmount)
      const totalCost = monthlyPayment * customTerm * 12 + customDownPayment

      setCustomMonthlyPayment(monthlyPayment)

      const defaultOptions = getDefaultLoanOptions()
      const newLoanOptions: LoanOptions = {
        "3": {
          ...defaultOptions["3"],
          downPayment: customDownPayment,
        },
        "5": {
          ...defaultOptions["5"],
          downPayment: customDownPayment,
        },
        "10": {
          ...defaultOptions["10"],
          downPayment: customDownPayment,
        },
      }

      newLoanOptions[selectedTerm] = {
        term: customTerm,
        monthlyPayment: monthlyPayment,
        interestRate: interestRate,
        totalInterest: totalInterest,
        totalCost: totalCost,
        downPayment: customDownPayment,
      }

      setLoanOptions(newLoanOptions)
    }
  }, [addons, systemCost, customDownPayment, customTerm, selectedTerm])

  // Update toggleAddon to update localStorage for both enabled and cost
  const toggleAddon = (index: number) => {
    setAddons((prevAddons) => {
      const newAddons = [...prevAddons];
      const togglingOn = !newAddons[index].enabled;
      let newCost = newAddons[index].cost;
      if (togglingOn) {
        // Calculate new cost based on address and tier
        let address = "";
        if (typeof window !== 'undefined') {
          const selectedLocation = localStorage.getItem("selectedLocation");
          if (selectedLocation) {
            try {
              address = JSON.parse(selectedLocation).address || "";
            } catch {}
          }
        }
        const county = extractCounty(address);
        if (county) {
          const tier = getTierByCounty(county);
          if (tier) {
            if (newAddons[index].name === "Home Battery") {
              newCost = 3000; // Fixed battery cost, not tier-based
            }
            if (newAddons[index].name === "EV Charger") {
              newCost = Array.isArray(tier.ev) && tier.ev.length === 2 ? median([tier.ev[0], tier.ev[1]]) : newAddons[index].cost;
            }
          }
        }
      }
      newAddons[index] = {
        ...newAddons[index],
        enabled: togglingOn,
        cost: togglingOn ? newCost : newAddons[index].cost, // keep cost for display, but set 0 in localStorage if toggled off
      };
      // Update localStorage
      if (typeof window !== 'undefined') {
        let answers: any = {};
        const saved = localStorage.getItem("personalise_answers");
        if (saved) {
          try { answers = JSON.parse(saved); } catch {}
        }
        if (newAddons[index].name === "Home Battery") {
          if (togglingOn) {
            // Toggling on: preserve original value if it was "yes" or "unsure", otherwise default to "yes"
            const valueToSet = (originalBatteryInterest === "yes" || originalBatteryInterest === "unsure") 
              ? originalBatteryInterest 
              : "yes";
            answers.batteryInterest = valueToSet;
          } else {
            // Toggling off: set to "no"
            answers.batteryInterest = "no";
          }
          answers.batteryPrice = newAddons[index].enabled ? newAddons[index].cost : 0;
        }
        if (newAddons[index].name === "EV Charger") {
          if (togglingOn) {
            // Toggling on: preserve original value if it was "yes" or "planning", otherwise default to "yes"
            const valueToSet = (originalEvOwnership === "yes" || originalEvOwnership === "planning") 
              ? originalEvOwnership 
              : "yes";
            answers.evOwnership = valueToSet;
          } else {
            // Toggling off: set to "no"
            answers.evOwnership = "no";
          }
          answers.evPrice = newAddons[index].enabled ? newAddons[index].cost : 0;
        }
        // Recalculate total system cost
        const baseSolarCost = answers.solarPrice ?? 10200;
        const batteryCost = newAddons.find(a => a.name === "Home Battery")?.enabled ? (answers.batteryPrice ?? 0) : 0;
        const evCost = newAddons.find(a => a.name === "EV Charger")?.enabled ? (answers.evPrice ?? 0) : 0;
        answers.totalCost = baseSolarCost + batteryCost + evCost;
        localStorage.setItem("personalise_answers", JSON.stringify(answers));
      }
      return newAddons;
    });
  };
  

  const handleContinue = () => {
    // Store finance information in localStorage
    const financeInfo = {
      selectedTerm,
      selectedLoan,
      systemCost,
      addons: addons.map(addon => ({
        name: addon.name,
        cost: addon.cost,
        enabled: addon.enabled,
        monthlyContribution: addon.monthlyContribution
      })),
      isCustomized,
      customDownPayment,
      customTerm,
      customMonthlyPayment,
      monthlySavings,
      annualSavings,
      netMonthlyCost: selectedLoan.monthlyPayment - monthlySavings,
      baseSolarCost,
      timestamp: new Date().toISOString()
    }
    
    if (typeof window !== 'undefined') {
      localStorage.setItem("financeInfo", JSON.stringify(financeInfo))
    }
    
    setShowSignupModal(true)
  }

  const handleDownload = () => {
    // Store finance information in localStorage
    const financeInfo = {
      selectedTerm,
      selectedLoan,
      systemCost,
      addons: addons.map(addon => ({
        name: addon.name,
        cost: addon.cost,
        enabled: addon.enabled,
        monthlyContribution: addon.monthlyContribution
      })),
      isCustomized,
      customDownPayment,
      customTerm,
      customMonthlyPayment,
      monthlySavings,
      annualSavings,
      netMonthlyCost: selectedLoan.monthlyPayment - monthlySavings,
      baseSolarCost,
      timestamp: new Date().toISOString()
    }
    
    if (typeof window !== 'undefined') {
      localStorage.setItem("financeInfo", JSON.stringify(financeInfo))
    }
    
    // In a real app, this would generate and download a PDF with financing details
    alert("Your financing options would be downloaded as a PDF")
  }

  const handleSignup = (email: string) => {
    // Store signup status in localStorage
    if (typeof window !== 'undefined') {
      localStorage.setItem("userSignedUp", "true")
      localStorage.setItem("userEmail", email)
    }

    // Close modal and navigate to installer selection page
    setShowSignupModal(false)
    router.push("/final-page")
  }

  const handleSkipSignup = () => {
    setShowSignupModal(false)
    router.push("/final-page")
  }

  const handleCloseModal = () => {
    setShowSignupModal(false)
  }

  const handleOpenCustomize = () => {
    setShowCustomizeModal(true)
    setCustomDownPayment(selectedLoan.downPayment)
    setCustomTerm(selectedLoan.term)
  }

  const handleCloseCustomize = () => {
    setShowCustomizeModal(false)
  }

  const incrementDownPayment = () => {
    if (customDownPayment + 500 <= systemCost) {
      setCustomDownPayment(customDownPayment + 500)
    }
  }

  const decrementDownPayment = () => {
    if (customDownPayment - 500 >= 0) {
      setCustomDownPayment(customDownPayment - 500)
    }
  }

  const incrementTerm = () => {
    if (customTerm < 30) {
      setCustomTerm(customTerm + 1)
    }
  }

  const decrementTerm = () => {
    if (customTerm > 1) {
      setCustomTerm(customTerm - 1)
    }
  }

  const handleSaveCustomOptions = () => {
    // Calculate new loan options based on custom inputs
    const remainingAmount = systemCost - customDownPayment

    // Simple interest calculation (in a real app, this would be more sophisticated)
    const calculateMonthlyPayment = (principal: number, rate: number, years: number) => {
      const monthlyRate = rate / 100 / 12
      const numPayments = years * 12
      return (principal * monthlyRate) / (1 - Math.pow(1 + monthlyRate, -numPayments))
    }

    // Calculate interest rate based on term (simplified)
    const getInterestRate = (years: number) => {
      if (years <= 3) return 3.9
      if (years <= 5) return 4.2
      return 4.5
    }

    const interestRate = getInterestRate(customTerm)
    const monthlyPayment = Math.round(calculateMonthlyPayment(remainingAmount, interestRate, customTerm))
    const totalInterest = Math.round(monthlyPayment * customTerm * 12 - remainingAmount)
    const totalCost = monthlyPayment * customTerm * 12 + customDownPayment

    setCustomMonthlyPayment(monthlyPayment)

    // Update all loan options to maintain consistency
    const defaultOptions = getDefaultLoanOptions()
    const newLoanOptions: LoanOptions = {
      "3": {
        ...defaultOptions["3"],
        downPayment: customDownPayment,
      },
      "5": {
        ...defaultOptions["5"],
        downPayment: customDownPayment,
      },
      "10": {
        ...defaultOptions["10"],
        downPayment: customDownPayment,
      },
    }

    // Set the selected term to a custom option
    newLoanOptions[selectedTerm] = {
      term: customTerm,
      monthlyPayment: monthlyPayment,
      interestRate: interestRate,
      totalInterest: totalInterest,
      totalCost: totalCost,
      downPayment: customDownPayment,
    }

    setLoanOptions(newLoanOptions)
    setIsCustomized(true)
    setShowCustomizeModal(false)
  }

  const handleResetOptions = () => {
    setLoanOptions(getDefaultLoanOptions())
    setIsCustomized(false)
  }

  // System configuration component that can be reused in both tabs
  const SystemConfiguration = ({ showMonthlyImpact = false }: { showMonthlyImpact?: boolean }) => (
    <div className="space-y-4 md:space-y-6 mb-6 md:mb-8">
      <div className="flex items-center gap-2 md:gap-3 mb-4 md:mb-6">
        <div className="w-8 h-8 md:w-10 md:h-10 bg-gradient-to-br from-emerald-500 to-green-600 rounded-lg md:rounded-xl flex items-center justify-center shadow-lg">
          <Zap className="h-4 w-4 md:h-5 md:w-5 text-white" />
        </div>
        <h3 className="text-lg md:text-xl lg:text-2xl font-bold text-gray-900">Your Solar System</h3>
      </div>
      
      {/* Solar Panels */}
      <div className="relative overflow-hidden rounded-xl md:rounded-2xl bg-gradient-to-br from-amber-50 via-yellow-50 to-orange-50 p-4 md:p-6 border-2 border-amber-200 shadow-xl">
        <div className="absolute top-0 right-0 w-16 md:w-24 h-16 md:h-24 bg-yellow-200 rounded-full blur-2xl opacity-40 transform translate-x-8 md:translate-x-12 -translate-y-8 md:-translate-y-12"></div>
        
        <div className="relative z-10 flex items-center">
          <div className="mr-4 md:mr-6 rounded-xl md:rounded-2xl bg-gradient-to-br from-amber-400 to-yellow-500 p-3 md:p-4 shadow-lg flex-shrink-0">
            <Sun className="h-6 w-6 md:h-8 md:w-8 text-white drop-shadow-sm" />
          </div>
          <div className="flex-1 min-w-0">
            <div className="flex flex-col sm:flex-row sm:items-center gap-1 sm:gap-2 mb-2">
              <h3 className="text-base md:text-lg lg:text-xl font-bold text-amber-900">Solar Panel System</h3>
              <div className="bg-amber-200 text-amber-800 px-2 md:px-3 py-1 rounded-full text-xs font-bold w-fit">
                REQUIRED
              </div>
            </div>
            <p className="text-amber-800 mb-2 md:mb-3 font-medium text-sm md:text-base">Clean energy foundation for your home</p>
            <div className="flex flex-col sm:flex-row sm:items-center gap-2 sm:gap-4">
              <span className="text-lg md:text-xl lg:text-2xl font-bold text-amber-900">€{baseSolarCost.toLocaleString()}</span>
              {showMonthlyImpact && (
                <>
                  <div className="hidden sm:block w-2 h-2 bg-amber-400 rounded-full"></div>
                  <span className="text-base md:text-lg font-bold text-amber-700">
                    €
                    {selectedLoan.monthlyPayment -
                      addons.reduce(
                        (total, addon) =>
                          addon.enabled ? total + addon.monthlyContribution[selectedTerm as keyof typeof addon.monthlyContribution] : total,
                        0,
                      )}
                    /month
                  </span>
                </>
              )}
            </div>
            <p className="text-amber-700 text-xs mt-2 font-medium">
              *Price excludes available grants. Average pricing from multiple installers.
            </p>
          </div>
        </div>
      </div>

      {/* Enhanced Addons */}
      <div className="space-y-3 md:space-y-4">
        <h4 className="text-base md:text-lg font-semibold text-gray-800 flex items-center gap-2">
          <Settings className="h-4 w-4 md:h-5 md:w-5 text-emerald-600" />
          Optional Add-ons
        </h4>
        
        {addons.map((addon, index) => (
          <div
            key={addon.name}
            className={cn(
              "group relative overflow-hidden rounded-xl md:rounded-2xl border-2 transition-all duration-500 hover:shadow-xl hover:-translate-y-1",
              addon.enabled 
                ? "border-emerald-300 bg-gradient-to-br from-emerald-50 via-white to-green-50 shadow-lg p-4 md:p-6" 
                : "border-gray-200 bg-gradient-to-br from-gray-50 to-slate-50 shadow-md opacity-75 p-3 md:p-4"
            )}
          >
            {/* Background Effects */}
            <div className={cn(
              "absolute top-0 right-0 rounded-full blur-2xl opacity-20 transform translate-x-12 md:translate-x-16 -translate-y-12 md:-translate-y-16 transition-all duration-500",
              addon.enabled 
                ? "w-24 md:w-32 h-24 md:h-32 bg-emerald-300" 
                : "w-16 md:w-20 h-16 md:h-20 bg-gray-300"
            )}></div>
            
            <div className="relative z-10 flex items-center">
              <div
                className={cn(
                  "rounded-xl md:rounded-2xl transition-all duration-500 shadow-lg flex-shrink-0",
                  addon.enabled 
                    ? "mr-4 md:mr-6 p-3 md:p-4 bg-gradient-to-br from-emerald-500 to-green-600" 
                    : "mr-3 md:mr-4 p-2 md:p-3 bg-gradient-to-br from-gray-400 to-slate-500"
                )}
              >
                <div className="text-white">
                  {addon.icon}
                </div>
              </div>
              
              <div className="flex-1 min-w-0">
                <div className="flex flex-col sm:flex-row sm:items-center gap-1 sm:gap-3 mb-2">
                  <h3 className={cn(
                    "text-base md:text-lg lg:text-xl font-bold transition-colors",
                    addon.enabled ? "text-emerald-900" : "text-gray-600"
                  )}>
                    {addon.name}
                  </h3>
                  {addon.enabled && (
                    <div className="bg-emerald-200 text-emerald-800 px-2 md:px-3 py-1 rounded-full text-xs font-bold animate-pulse w-fit">
                      INCLUDED
                    </div>
                  )}
                </div>
                {addon.enabled && (
                  <>
                    <p className="text-emerald-700 mb-2 md:mb-3 font-medium transition-colors text-sm md:text-base">
                      {addon.description}
                    </p>
                    <div className="flex flex-col sm:flex-row sm:items-center gap-2 sm:gap-4">
                      <span className="text-lg md:text-xl lg:text-2xl font-bold text-emerald-900">
                        €{addon.cost.toLocaleString()}
                      </span>
                      {showMonthlyImpact && (
                        <>
                          <div className="hidden sm:block w-2 h-2 rounded-full bg-emerald-400"></div>
                          <span className="text-base md:text-lg font-bold text-emerald-700">
                            +€{addon.monthlyContribution[selectedTerm as keyof typeof addon.monthlyContribution]}/month
                          </span>
                        </>
                      )}
                    </div>
                   
                  </>
                )}
              </div>
              
              <div className="ml-4 md:ml-6 flex flex-col items-center gap-2 md:gap-3 flex-shrink-0">
                <Switch
                  checked={addon.enabled}
                  onCheckedChange={() => toggleAddon(index)}
                  className={cn(
                    "transition-all duration-300 scale-110 md:scale-125",
                    addon.enabled ? "data-[state=checked]:bg-emerald-600" : ""
                  )}
                />
                <span className={cn(
                  "text-xs font-medium transition-colors",
                  addon.enabled ? "text-emerald-700" : "text-gray-500"
                )}>
                  {addon.enabled ? "ON" : "OFF"}
                </span>
              </div>
            </div>
          </div>
        ))}
      </div>

      {/* Enhanced Total System Cost */}
      {/* <div className="relative overflow-hidden rounded-xl md:rounded-2xl bg-gradient-to-br from-slate-50 via-white to-gray-50 p-4 md:p-6 shadow-xl border border-gray-200">
        <div className="absolute inset-0 opacity-20">
          <div className="absolute top-0 right-0 w-32 md:w-40 h-32 md:h-40 bg-gray-200 rounded-full blur-3xl transform translate-x-16 md:translate-x-20 -translate-y-16 md:-translate-y-20"></div>
          <div className="absolute bottom-0 left-0 w-24 md:w-32 h-24 md:h-32 bg-gray-300 rounded-full blur-2xl transform -translate-x-12 md:-translate-x-16 translate-y-12 md:translate-y-16"></div>
        </div>
        
        <div className="relative z-10 flex flex-col sm:flex-row sm:items-center sm:justify-between text-gray-900 gap-4">
          <div className="flex items-center gap-3 md:gap-4">
            <div className="bg-gray-100 rounded-xl md:rounded-2xl p-2 md:p-3 border border-gray-300 flex-shrink-0">
              <Zap className="h-6 w-6 md:h-8 md:w-8 text-gray-600" />
            </div>
            <div>
              <h3 className="text-base md:text-lg lg:text-xl font-bold mb-1">System Cost Breakdown</h3>
              <p className="text-gray-600 text-xs md:text-sm">Individual component pricing</p>
            </div>
          </div>
          <div className="text-left sm:text-right">
            <div className="text-2xl md:text-3xl font-bold mb-1">€{systemCost.toLocaleString()}</div>
            {showMonthlyImpact && (
              <div className="text-gray-600 font-semibold text-sm md:text-base">€{selectedLoan.monthlyPayment}/month</div>
            )}
          </div>
        </div>
      </div> */}
    </div>
  )

  return (
    <div className="flex min-h-screen flex-col bg-gradient-to-br from-slate-50 via-white to-emerald-50">
      <AppHeader />
      <StepBadges currentStep={4} />
      <main className="flex-1">
        <div className="container mx-auto max-w-6xl px-4 py-4 md:py-8">
          <div className="space-y-6 md:space-y-8">
            {/* Hero Section with Enhanced No Money Down Banner */}
            <div className="w-full max-w-sm mx-auto">
              <div className="bg-gradient-to-b from-emerald-500 to-emerald-600 rounded-3xl p-6 text-white">
                {/* Icon */}
                <div className="flex justify-center mb-4">
                  <div className="bg-emerald-400/40 rounded-2xl p-3 border border-emerald-300/30">
                    <PiggyBank className="w-8 h-8 text-white" />
                  </div>
                </div>

                {/* Title */}
                <div className="text-center mb-5">
                  <h1 className="text-xl font-bold">
                    Go Solar with <span className="text-amber-300">Zero Upfront Cost</span>
                  </h1>
                </div>

                {/* Benefits - all in one row */}
                <div className="flex gap-2">
                  <div className="flex-1 bg-emerald-400/30 rounded-xl p-3 border border-emerald-300/30 text-center">
                    <div className="w-2 h-2 bg-amber-400 rounded-full mx-auto mb-1"></div>
                    <div className="text-sm font-semibold">€0</div>
                    <div className="text-xs opacity-90">Down Payment</div>
                  </div>

                  <div className="flex-1 bg-emerald-400/30 rounded-xl p-3 border border-emerald-300/30 text-center">
                    <div className="w-2 h-2 bg-amber-400 rounded-full mx-auto mb-1"></div>
                    <div className="text-sm font-semibold">€{monthlySavings}</div>
                    <div className="text-xs opacity-90">Monthly Savings</div>
                  </div>

                  <div className="flex-1 bg-emerald-400/30 rounded-xl p-3 border border-emerald-300/30 text-center">
                    <div className="w-2 h-2 bg-amber-400 rounded-full mx-auto mb-1"></div>
                    <div className="text-sm font-semibold">€{annualSavings.toLocaleString()}</div>
                    <div className="text-xs opacity-90">Yearly Savings</div>
                  </div>
                </div>
              </div>
            </div>

            {/* Enhanced Grant Information Card */}
            <div className="w-full max-w-4xl mx-auto">
              <div className="relative overflow-hidden rounded-2xl bg-gradient-to-br from-amber-50 via-yellow-50 to-orange-50 border-2 border-amber-200 shadow-2xl">
                {/* Background decorative elements */}
                <div className="absolute top-0 right-0 w-32 h-32 bg-amber-200 rounded-full blur-3xl opacity-30 transform translate-x-16 -translate-y-16"></div>
                <div className="absolute bottom-0 left-0 w-24 h-24 bg-yellow-300 rounded-full blur-2xl opacity-20 transform -translate-x-12 translate-y-12"></div>
                
                <div className="relative z-10 p-6 md:p-8">
                  {/* Header */}
                  <div className="flex items-center gap-4 mb-6">
                    <div className="w-12 h-12 md:w-16 md:h-16 bg-gradient-to-br from-amber-500 to-yellow-600 rounded-2xl flex items-center justify-center shadow-xl">
                      <PiggyBank className="h-6 w-6 md:h-8 md:w-8 text-white" />
                    </div>
                    <div className="flex-1">
                      <div className="flex items-center gap-2 mb-2">
                        <h3 className="text-xl md:text-2xl font-bold text-amber-900">Amazing Grant News!</h3>
                        <div className="bg-amber-500 text-white px-3 py-1 rounded-full text-xs font-bold animate-pulse">
                          INSTANT CASH
                        </div>
                      </div>
                      <p className="text-amber-800 font-medium">Get money back at installation - before you pay anything!</p>
                    </div>
                  </div>

                  {/* Main benefit highlight */}
                  <div className="bg-gradient-to-r from-amber-100 to-yellow-100 rounded-xl p-6 mb-6 border border-amber-300 shadow-lg">
                    <div className="flex items-center gap-3 mb-3">
                      <div className="w-8 h-8 bg-amber-500 rounded-full flex items-center justify-center shadow-md">
                        <Sparkles className="h-4 w-4 text-white" />
                      </div>
                      <h4 className="text-lg font-bold text-amber-900">Grant Paid Back at Installation</h4>
                    </div>
                    <p className="text-amber-800 font-medium leading-relaxed">
                      You'll receive your grant money immediately when your system is installed - giving you extra cash in hand even though you haven't paid anything yet!
                    </p>
                  </div>

                  {/* Expandable details */}
                  <button
                    onClick={() => setIsGrantDetailsExpanded(!isGrantDetailsExpanded)}
                    className="w-full flex items-center justify-between p-4 rounded-xl border-2 border-amber-300 hover:border-amber-400 hover:bg-amber-100/50 transition-all duration-300 group shadow-md hover:shadow-lg"
                  >
                    <span className="font-semibold text-amber-900 group-hover:text-amber-800 flex items-center gap-2">
                      <Info className="h-5 w-5" />
                      View Grant Eligibility & Details
                    </span>
                    <ChevronDown
                      className={cn(
                        "h-5 w-5 text-amber-700 group-hover:text-amber-600 transition-all duration-300",
                        isGrantDetailsExpanded ? "transform rotate-180" : ""
                      )}
                    />
                  </button>

                  <div
                    className={cn(
                      "overflow-hidden transition-all duration-500 ease-in-out",
                      isGrantDetailsExpanded ? "max-h-[400px] opacity-100 mt-6" : "max-h-0 opacity-0"
                    )}
                  >
                    <div className="space-y-4">
                      {/* Eligibility requirement */}
                      <div className="bg-white/80 backdrop-blur-sm rounded-xl p-6 border border-amber-200 shadow-md">
                        <div className="flex items-center gap-3 mb-4">
                          <div className="w-10 h-10 bg-gradient-to-br from-emerald-500 to-green-600 rounded-xl flex items-center justify-center shadow-lg">
                            <Shield className="h-5 w-5 text-white" />
                          </div>
                          <h5 className="text-lg font-bold text-gray-900">Eligibility Requirements</h5>
                        </div>
                        <div className="bg-emerald-50 border-2 border-emerald-200 rounded-xl p-4">
                          <div className="flex items-start gap-3">
                            <div className="w-6 h-6 bg-emerald-500 rounded-full flex items-center justify-center mt-0.5 shadow-md">
                              <Check className="h-3 w-3 text-white" />
                            </div>
                            <div>
                              <h6 className="font-bold text-emerald-900 mb-1">Home Built & Occupied Before 2021</h6>
                              <p className="text-emerald-800 text-sm">
                                Your home must have been built and occupied on or before 31st December 2020 to qualify for this grant.
                              </p>
                            </div>
                          </div>
                        </div>
                      </div>

                      {/* How it works */}
                      <div className="bg-white/80 backdrop-blur-sm rounded-xl p-6 border border-amber-200 shadow-md">
                        <div className="flex items-center gap-3 mb-4">
                          <div className="w-10 h-10 bg-gradient-to-br from-blue-500 to-indigo-600 rounded-xl flex items-center justify-center shadow-lg">
                            <Timer className="h-5 w-5 text-white" />
                          </div>
                          <h5 className="text-lg font-bold text-gray-900">How It Works</h5>
                        </div>
                        <div className="space-y-3">
                          <div className="flex items-start gap-3">
                            <div className="w-6 h-6 bg-blue-100 rounded-full flex items-center justify-center mt-0.5 text-blue-600 font-bold text-xs">
                              1
                            </div>
                            <p className="text-gray-700 font-medium">System gets installed at your home</p>
                          </div>
                          <div className="flex items-start gap-3">
                            <div className="w-6 h-6 bg-blue-100 rounded-full flex items-center justify-center mt-0.5 text-blue-600 font-bold text-xs">
                              2
                            </div>
                            <p className="text-gray-700 font-medium">Grant money is immediately paid back to you</p>
                          </div>
                          <div className="flex items-start gap-3">
                            <div className="w-6 h-6 bg-blue-100 rounded-full flex items-center justify-center mt-0.5 text-blue-600 font-bold text-xs">
                              3
                            </div>
                            <p className="text-gray-700 font-medium">You have extra cash in hand before any payments begin</p>
                          </div>
                        </div>
                      </div>

                      {/* Call to action */}
                      <div className="bg-gradient-to-r from-amber-500 to-yellow-500 rounded-xl p-6 text-white shadow-xl">
                        <div className="flex items-center gap-3 mb-3">
                          <Award className="h-6 w-6" />
                          <h5 className="text-lg font-bold">Don't Miss Out!</h5>
                        </div>
                        <p className="font-medium mb-4">
                          This grant opportunity provides immediate financial benefit at installation. Check if your home qualifies today!
                        </p>
                        <div className="flex items-center gap-2 text-amber-100">
                          <Calendar className="h-4 w-4" />
                          <span className="text-sm font-medium">Homes built & occupied before 31st Dec 2020</span>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>

            {/* Enhanced Tabs with Beautiful Design */}
            <Tabs defaultValue="finance" className="w-full">
              <TabsList className="grid w-full grid-cols-2 bg-white/80 backdrop-blur-sm border border-gray-200 shadow-lg rounded-xl md:rounded-2xl p-1 h-12 md:h-14">
                <TabsTrigger 
                  value="finance" 
                  className="rounded-lg md:rounded-xl text-sm md:text-base font-medium data-[state=active]:bg-gradient-to-r data-[state=active]:from-emerald-500 data-[state=active]:to-green-600 data-[state=active]:text-white data-[state=active]:shadow-lg transition-all duration-300"
                >
                  <CreditCard className="mr-1 md:mr-2 h-4 w-4 md:h-5 md:w-5" />
                  <span className="hidden sm:inline">Smart </span>Financing
                </TabsTrigger>
                <TabsTrigger 
                  value="cash" 
                  className="rounded-lg md:rounded-xl text-sm md:text-base font-medium data-[state=active]:bg-gradient-to-r data-[state=active]:from-emerald-500 data-[state=active]:to-green-600 data-[state=active]:text-white data-[state=active]:shadow-lg transition-all duration-300"
                >
                  <Wallet className="mr-1 md:mr-2 h-4 w-4 md:h-5 md:w-5" />
                  <span className="hidden sm:inline">Cash </span>Payment
                </TabsTrigger>
              </TabsList>

              {/* Cash Payment Tab - Enhanced */}
              <TabsContent value="cash" className="mt-6 md:mt-8">
                <Card className="border-0 shadow-2xl bg-white/80 backdrop-blur-sm rounded-xl md:rounded-2xl overflow-hidden">
                  <CardContent className="p-4 md:p-6 lg:p-8">
                    {/* Enhanced Why Choose Financing Section */}
                    <div className="mb-6 md:mb-8 relative overflow-hidden rounded-xl md:rounded-2xl bg-gradient-to-br from-slate-50 via-white to-emerald-50 p-4 md:p-6 lg:p-8 shadow-xl border border-emerald-100">
                      <div className="absolute top-0 right-0 w-24 md:w-32 h-24 md:h-32 bg-emerald-200 rounded-full blur-2xl opacity-30 transform translate-x-12 md:translate-x-16 -translate-y-12 md:-translate-y-16"></div>
                      
                      <div className="relative z-10">
                        <div className="text-center mb-6 md:mb-8">
                          <div className="inline-flex items-center gap-2 bg-emerald-100 text-emerald-800 px-3 md:px-4 py-1.5 md:py-2 rounded-full text-xs md:text-sm font-medium mb-3 md:mb-4">
                            <Award className="h-3 w-3 md:h-4 md:w-4" />
                            Payment Comparison
                          </div>
                          <h2 className="text-xl md:text-2xl lg:text-3xl font-bold text-gray-900 mb-2">Choose Your Path to Solar</h2>
                          <p className="text-sm md:text-base text-gray-600 max-w-2xl mx-auto">Compare the benefits of cash payment vs. our flexible financing options</p>
                        </div>

                        <div className="grid gap-6 md:gap-8 lg:grid-cols-2">
                          {/* Cash Option - Enhanced */}
                          <div
                            className={cn(
                              "transform rounded-xl md:rounded-2xl bg-white p-4 md:p-6 lg:p-8 shadow-xl border-2 border-gray-100 transition-all duration-1000 hover:shadow-2xl hover:-translate-y-1",
                              animateComparison ? "translate-y-0 opacity-100" : "translate-y-8 opacity-0",
                            )}
                          >
                            <div className="text-center mb-4 md:mb-6">
                              <div className="inline-flex items-center justify-center w-12 h-12 md:w-16 md:h-16 bg-gradient-to-br from-gray-100 to-gray-200 rounded-xl md:rounded-2xl mb-3 md:mb-4 shadow-lg">
                                <Wallet className="h-6 w-6 md:h-8 md:w-8 text-gray-600" />
                              </div>
                              <h3 className="text-lg md:text-xl lg:text-2xl font-bold text-gray-900 mb-2">Cash Payment</h3>
                              <div className="text-2xl md:text-3xl lg:text-4xl font-bold text-gray-900 mb-1">€{systemCost.toLocaleString()}</div>
                              <div className="text-xs md:text-sm text-gray-500 bg-gray-50 px-2 md:px-3 py-1 rounded-full inline-block">One-time payment</div>
                            </div>

                            <div className="space-y-3 md:space-y-4">
                              <div className="flex items-center text-xs md:text-sm bg-green-50 p-2 md:p-3 rounded-lg md:rounded-xl">
                                <div className="w-5 h-5 md:w-6 md:h-6 bg-green-500 rounded-full flex items-center justify-center mr-2 md:mr-3 flex-shrink-0">
                                  <Check className="h-2 w-2 md:h-3 md:w-3 text-white" />
                                </div>
                                <span className="text-green-800 font-medium">No interest charges or fees</span>
                              </div>
                              <div className="flex items-center text-xs md:text-sm bg-red-50 p-2 md:p-3 rounded-lg md:rounded-xl">
                                <div className="w-5 h-5 md:w-6 md:h-6 bg-red-100 rounded-full flex items-center justify-center mr-2 md:mr-3 flex-shrink-0">
                                  <X className="h-2 w-2 md:h-3 md:w-3 text-red-500" />
                                </div>
                                <span className="text-red-700">Large upfront investment required</span>
                              </div>
                              <div className="flex items-center text-xs md:text-sm bg-red-50 p-2 md:p-3 rounded-lg md:rounded-xl">
                                <div className="w-5 h-5 md:w-6 md:h-6 bg-red-100 rounded-full flex items-center justify-center mr-2 md:mr-3 flex-shrink-0">
                                  <X className="h-2 w-2 md:h-3 md:w-3 text-red-500" />
                                </div>
                                <span className="text-red-700">Limits system size based on available cash</span>
                              </div>
                            </div>
                          </div>

                          {/* Financing Option - Enhanced */}
                          <div
                            className={cn(
                              "transform rounded-xl md:rounded-2xl bg-gradient-to-br from-emerald-500 via-green-600 to-teal-600 p-4 md:p-6 lg:p-8 text-white shadow-2xl border-2 border-emerald-400 transition-all duration-1000 hover:shadow-3xl hover:-translate-y-1 relative overflow-hidden",
                              animateComparison ? "translate-y-0 opacity-100" : "translate-y-8 opacity-0",
                              animateComparison ? "delay-300" : "",
                            )}
                          >
                            {/* Popular badge */}
                            <div className="absolute top-3 right-3 md:top-4 md:right-4 bg-yellow-400 text-yellow-900 px-2 md:px-3 py-1 rounded-full text-xs font-bold shadow-lg">
                              RECOMMENDED
                            </div>
                            
                            <div className="absolute top-0 right-0 w-24 md:w-32 h-24 md:h-32 bg-white/10 rounded-full blur-2xl transform translate-x-12 md:translate-x-16 -translate-y-12 md:-translate-y-16"></div>
                            
                            <div className="relative z-10">
                              <div className="text-center mb-4 md:mb-6">
                                <div className="inline-flex items-center justify-center w-12 h-12 md:w-16 md:h-16 bg-white/20 backdrop-blur-sm rounded-xl md:rounded-2xl mb-3 md:mb-4 border border-white/30 shadow-lg">
                                  <CreditCard className="h-6 w-6 md:h-8 md:w-8 text-white" />
                                </div>
                                <h3 className="text-lg md:text-xl lg:text-2xl font-bold mb-2">Smart Financing</h3>
                                <div className="text-2xl md:text-3xl lg:text-4xl font-bold mb-1">€0</div>
                                <div className="text-xs md:text-sm text-emerald-100 bg-white/20 px-2 md:px-3 py-1 rounded-full inline-block mb-2 md:mb-3">Down payment</div>
                                <div className="flex items-center justify-center gap-1">
                                  <span className="text-lg md:text-xl lg:text-2xl font-bold">€{selectedLoan.monthlyPayment}</span>
                                  <span className="text-emerald-100 text-sm md:text-base">/month</span>
                                </div>
                              </div>

                              <div className="space-y-3 md:space-y-4">
                                <div className="flex items-center text-xs md:text-sm bg-white/15 backdrop-blur-sm p-2 md:p-3 rounded-lg md:rounded-xl border border-white/20">
                                  <div className="w-5 h-5 md:w-6 md:h-6 bg-emerald-400 rounded-full flex items-center justify-center mr-2 md:mr-3 flex-shrink-0 shadow-lg">
                                    <Check className="h-2 w-2 md:h-3 md:w-3 text-emerald-900" />
                                  </div>
                                  <span className="font-medium">Zero upfront investment</span>
                                </div>
                                <div className="flex items-center text-xs md:text-sm bg-white/15 backdrop-blur-sm p-2 md:p-3 rounded-lg md:rounded-xl border border-white/20">
                                  <div className="w-5 h-5 md:w-6 md:h-6 bg-emerald-400 rounded-full flex items-center justify-center mr-2 md:mr-3 flex-shrink-0 shadow-lg">
                                    <Check className="h-2 w-2 md:h-3 md:w-3 text-emerald-900" />
                                  </div>
                                  <span className="font-medium">Start saving immediately</span>
                                </div>
                                <div className="flex items-center text-xs md:text-sm bg-white/15 backdrop-blur-sm p-2 md:p-3 rounded-lg md:rounded-xl border border-white/20">
                                  <div className="w-5 h-5 md:w-6 md:h-6 bg-emerald-400 rounded-full flex items-center justify-center mr-2 md:mr-3 flex-shrink-0 shadow-lg">
                                    <Check className="h-2 w-2 md:h-3 md:w-3 text-emerald-900" />
                                  </div>
                                  <span className="font-medium">Preserve your cash for other investments</span>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>

                        <div
                          className={cn(
                            "mt-6 md:mt-8 flex items-center justify-center transition-all duration-1000",
                            animateComparison ? "opacity-100" : "opacity-0",
                            animateComparison ? "delay-600" : "",
                          )}
                        >
                          <div className="bg-gradient-to-r from-emerald-100 to-green-100 rounded-xl md:rounded-2xl px-4 md:px-6 py-3 md:py-4 text-center shadow-lg border border-emerald-200">
                            <div className="flex items-center justify-center gap-2 text-emerald-800">
                              <TrendingDown className="h-4 w-4 md:h-5 md:w-5" />
                              <span className="font-bold text-sm md:text-base lg:text-lg">Save €{monthlySavings} monthly on energy bills</span>
                            </div>
                            <p className="text-emerald-700 text-xs md:text-sm mt-1">Regardless of your payment choice</p>
                          </div>
                        </div>
                      </div>
                    </div>

                    {/* System Configuration in Cash Tab */}
                    <SystemConfiguration showMonthlyImpact={false} />

                    <div className="grid gap-6 md:grid-cols-2">
                      <div className="space-y-4">
                        <div>
                          <h3 className="text-lg font-medium text-left">One-Time Payment</h3>
                          <div className="mt-2 flex items-end">
                            <span className="text-3xl font-bold text-green-600">€{systemCost.toLocaleString()}</span>
                          </div>
                          <p className="mt-1 text-sm text-gray-500 text-left">Pay upfront and own your system immediately</p>
                          <p className="text-xs text-gray-600 mt-2 font-medium">
                            *Price excludes available grants. Average pricing from multiple installers.
                          </p>
                        </div>

                        <div className="rounded-lg bg-green-50 p-4">
                          <h4 className="font-medium text-green-800 text-left">Benefits of Cash Payment</h4>
                          <ul className="mt-2 space-y-2 text-sm text-green-700">
                            <li className="flex items-start text-left">
                              <div className="mr-2 mt-0.5 h-4 w-4 rounded-full bg-green-600 text-white flex items-center justify-center text-xs">
                                ✓
                              </div>
                              <span>No interest charges or financing fees</span>
                            </li>
                            <li className="flex items-start text-left">
                              <div className="mr-2 mt-0.5 h-4 w-4 rounded-full bg-green-600 text-white flex items-center justify-center text-xs">
                                ✓
                              </div>
                              <span>Maximum lifetime savings on energy bills</span>
                            </li>
                            <li className="flex items-start text-left">
                              <div className="mr-2 mt-0.5 h-4 w-4 rounded-full bg-green-600 text-white flex items-center justify-center text-xs">
                                ✓
                              </div>
                              <span>Immediate increase in property value</span>
                            </li>
                            <li className="flex items-start text-left">
                              <div className="mr-2 mt-0.5 h-4 w-4 rounded-full bg-green-600 text-white flex items-center justify-center text-xs">
                                ✓
                              </div>
                              <span>No monthly payments to manage</span>
                            </li>
                          </ul>
                        </div>
                      </div>

                      <div className="space-y-4">
                        <div>
                          <h3 className="text-lg font-medium text-left">Return on Investment</h3>
                          <div className="mt-4 space-y-3">
                            <div className="flex justify-between items-center">
                              <span className="text-left">Annual Energy Savings</span>
                              <span className="font-medium text-right">€{annualSavings.toLocaleString()}</span>
                            </div>
                            <div className="flex justify-between items-center">
                              <span className="text-left">Simple Payback Period</span>
                              <span className="font-medium text-right">{Math.round(systemCost / annualSavings)} years</span>
                            </div>
                            <div className="flex justify-between items-center">
                              <span className="text-left">25-Year Savings</span>
                              <span className="font-medium text-right">€{(annualSavings * 25).toLocaleString()}</span>
                            </div>
                            <div className="flex justify-between items-center">
                              <span className="text-left">Property Value Increase</span>
                              <span className="font-medium text-right">€10,000</span>
                            </div>
                          </div>
                          <p className="text-xs text-gray-600 mt-3 font-medium">
                            *Calculations based on average pricing from multiple installers, excluding available grants.
                          </p>
                        </div>

                        <div className="rounded-lg border border-gray-200 bg-gray-50 p-4">
                          <div className="flex items-center gap-2">
                            <Info className="h-5 w-5 text-gray-500" />
                            <h4 className="font-medium text-left">Did you know?</h4>
                          </div>
                          <p className="mt-2 text-sm text-gray-600 text-left">
                            Many homeowners use home savings or investments to pay for energy upgrades, as the return
                            often exceeds traditional investment options.
                          </p>
                        </div>
                      </div>
                    </div>
                  </CardContent>
                </Card>
              </TabsContent>

              {/* Finance Options Tab */}
              <TabsContent value="finance">
                <Card>
                  <CardContent className="pt-6">
                    <div className="flex flex-col gap-3 sm:flex-row sm:items-center sm:justify-between mb-6">
                      <div className="text-left">
                        <h3 className="text-lg font-medium">Choose Your Loan Term</h3>
                        {/* <p className="text-sm text-green-600 font-medium">
                          No money down required - start saving immediately!
                        </p> */}
                      </div>
                      <Button
                        variant="outline"
                        size="sm"
                        onClick={handleOpenCustomize}
                        className="w-full sm:w-auto text-green-600 border-green-200"
                      >
                        <Settings className="mr-2 h-4 w-4" />
                        Explore Financing Options
                      </Button>
                    </div>

                    {/* Enhanced Loan Term Selection */}
                    <div className="mb-8">
                      {isCustomized ? (
                        <div className="relative overflow-hidden rounded-2xl border-2 border-emerald-300 bg-gradient-to-br from-emerald-50 via-white to-green-50 p-6 shadow-xl">
                          <div className="absolute top-0 right-0 w-24 h-24 bg-emerald-200 rounded-full blur-2xl opacity-30 transform translate-x-12 -translate-y-12"></div>
                          
                          <div className="relative z-10">
                            <div className="flex justify-between items-center mb-4">
                              <div className="flex items-center gap-2">
                                <div className="w-8 h-8 bg-emerald-500 rounded-xl flex items-center justify-center shadow-lg">
                                  <Settings className="h-4 w-4 text-white" />
                                </div>
                                <h4 className="text-xl font-bold text-emerald-900 text-left">Your Custom Plan</h4>
                              </div>
                              <Button
                                variant="ghost"
                                size="sm"
                                onClick={handleResetOptions}
                                className="h-9 text-emerald-600 hover:bg-emerald-100 rounded-xl font-semibold"
                              >
                                Reset to Default
                              </Button>
                            </div>

                            <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                              <div className="bg-white/80 backdrop-blur-sm rounded-xl p-4 border border-emerald-200 shadow-md text-center">
                                <div className="text-sm text-emerald-700 font-medium mb-1">Loan Term</div>
                                <div className="text-2xl font-bold text-emerald-900">{customTerm} years</div>
                              </div>
                              <div className="bg-white/80 backdrop-blur-sm rounded-xl p-4 border border-emerald-200 shadow-md text-center">
                                <div className="text-sm text-emerald-700 font-medium mb-1">Down Payment</div>
                                <div className="text-2xl font-bold text-emerald-900">€{customDownPayment.toLocaleString()}</div>
                              </div>
                              <div className="bg-white/80 backdrop-blur-sm rounded-xl p-4 border border-emerald-200 shadow-md text-center">
                                <div className="text-sm text-emerald-700 font-medium mb-1">Monthly Payment</div>
                                <div className="text-2xl font-bold text-emerald-600">€{selectedLoan.monthlyPayment}</div>
                              </div>
                            </div>
                          </div>
                        </div>
                      ) : (
                        <div className="space-y-4">
                          <h4 className="text-lg font-semibold text-gray-800 text-center">Select Your Payment Plan</h4>
                          <div className="grid grid-cols-3 gap-2 md:gap-4">
                            {Object.keys(loanOptions).map((term) => (
                              <button
                                key={term}
                                onClick={() => setSelectedTerm(term)}
                                className={cn(
                                  "relative group rounded-2xl border-2 p-3 md:p-6 text-center transition-all duration-300 hover:shadow-xl hover:-translate-y-1",
                                  selectedTerm === term
                                    ? "border-emerald-500 bg-gradient-to-br from-emerald-50 via-white to-green-50 shadow-xl"
                                    : "border-gray-200 bg-white hover:border-emerald-200 hover:bg-emerald-50/50 shadow-lg"
                                )}
                              >
                                {selectedTerm === term && (
                                  <div className="absolute -top-2 -right-2 md:-top-3 md:-right-3 w-6 h-6 md:w-8 md:h-8 bg-emerald-500 rounded-full flex items-center justify-center shadow-lg">
                                    <Check className="h-3 w-3 md:h-4 md:w-4 text-white" />
                                  </div>
                                )}
                                
                                <div className="mb-2 md:mb-3">
                                  <div className={cn(
                                    "text-sm md:text-lg font-bold transition-colors",
                                    selectedTerm === term ? "text-emerald-900" : "text-gray-700"
                                  )}>
                                    {term} Years
                                  </div>
                                  <div className="text-xs md:text-sm text-gray-500">Loan Term</div>
                                </div>
                                
                                <div className={cn(
                                  "text-lg md:text-3xl font-bold transition-colors",
                                  selectedTerm === term ? "text-emerald-600" : "text-gray-900"
                                )}>
                                  €{loanOptions[term].monthlyPayment}
                                </div>
                                <div className="text-xs md:text-sm text-gray-500 mt-1">per month</div>
                                
                                {selectedTerm === term && (
                                  <div className="mt-2 md:mt-3 text-xs text-emerald-700 font-medium bg-emerald-100 px-2 md:px-3 py-1 rounded-full">
                                    SELECTED
                                  </div>
                                )}
                              </button>
                            ))}
                          </div>
                        </div>
                      )}
                    </div>

                    {/* Enhanced System Configuration in Finance Tab */}
                    <SystemConfiguration showMonthlyImpact={true} />

                    <div className="grid gap-8 lg:grid-cols-2">
                      <div className="space-y-6">
                        {/* Enhanced Monthly Breakdown */}
                        <div className="bg-white rounded-2xl p-6 shadow-2xl border-2 border-gray-200/50 ring-1 ring-gray-300/20">
                          <div className="flex items-center gap-3 mb-6">
                            <div className="w-10 h-10 bg-gradient-to-br from-emerald-500 to-green-600 rounded-xl flex items-center justify-center shadow-lg">
                              <Calculator className="h-5 w-5 text-white" />
                            </div>
                            <h4 className="text-xl font-bold text-emerald-900">Monthly Impact</h4>
                          </div>
                          
                          <div className="space-y-4">
                            {/* Monthly payment */}
                            <div className="flex justify-between items-center p-4 bg-slate-100 rounded-xl">
                              <span className="font-semibold text-slate-700">Monthly payment</span>
                              <span className="text-xl font-bold text-slate-900">€{selectedLoan.monthlyPayment}</span>
                            </div>

                            {/* Energy savings */}
                            <div className="flex justify-between items-center p-4 bg-green-100 rounded-xl">
                              <span className="font-semibold text-green-700">Energy savings</span>
                              <span className="text-xl font-bold text-green-700">-€{monthlySavings}</span>
                            </div>

                            {/* Net monthly cost */}
                            <div className="flex justify-between items-center p-4 bg-indigo-100 rounded-xl">
                              <span className="font-semibold text-indigo-700">Net monthly cost</span>
                              <span className="text-xl font-bold text-indigo-900">
                                {netMonthlyCost <= 0 ? "€0" : `€${netMonthlyCost}`}
                              </span>
                            </div>
                          </div>
                        </div>

                        {/* Enhanced Component Breakdown */}
                        <div className="w-full max-w-md mx-auto overflow-hidden bg-gradient-to-b from-white to-gray-50 rounded-2xl shadow-2xl border-2 border-gray-200/50 ring-1 ring-gray-300/20">
                          <div className="p-0">
                            {/* Header */}
                            <div className="p-4 pb-3">
                              <div className="flex items-center gap-3 mb-3">
                                <div className="w-10 h-10 bg-blue-500 rounded-xl flex items-center justify-center">
                                  <Zap className="w-5 h-5 text-white" />
                                </div>
                                <h2 className="text-xl font-semibold text-gray-900">Payment Breakdown</h2>
                              </div>

                              {/* Payment Items */}
                              <div className="space-y-2">
                                {/* Solar Panels */}
                                <div className="flex items-center justify-between p-3 bg-gradient-to-r from-orange-50 to-yellow-50 rounded-xl border border-orange-100">
                                  <div className="flex items-center gap-3">
                                    <div className="w-8 h-8 bg-orange-100 rounded-lg flex items-center justify-center">
                                      <Sun className="w-4 h-4 text-orange-600" />
                                    </div>
                                    <span className="font-medium text-gray-700">Solar Panels</span>
                                  </div>
                                  <span className="font-semibold text-orange-700">
                                    €{selectedLoan.monthlyPayment -
                                      addons.reduce(
                                        (total, addon) =>
                                          addon.enabled ? total + addon.monthlyContribution[selectedTerm as keyof typeof addon.monthlyContribution] : total,
                                        0,
                                      )}/month
                                  </span>
                                </div>

                                {/* Home Battery */}
                                {(() => {
                                  const batteryAddon = addons.find(a => a.name === "Home Battery");
                                  return (
                                    <div className={cn(
                                      "flex items-center justify-between p-3 rounded-xl border transition-all",
                                      batteryAddon?.enabled
                                        ? "bg-gradient-to-r from-green-50 to-emerald-50 border-green-100"
                                        : "bg-gray-50 border-gray-100"
                                    )}>
                                      <div className="flex items-center gap-3">
                                        <div className={cn(
                                          "w-8 h-8 rounded-lg flex items-center justify-center",
                                          batteryAddon?.enabled
                                            ? "bg-green-100"
                                            : "bg-gray-100"
                                        )}>
                                          <Battery className={cn(
                                            "w-4 h-4",
                                            batteryAddon?.enabled
                                              ? "text-green-600"
                                              : "text-gray-400"
                                          )} />
                                        </div>
                                        <div className="flex flex-col">
                                          <span className={cn(
                                            "font-medium",
                                            batteryAddon?.enabled
                                              ? "text-gray-700"
                                              : "text-gray-500"
                                          )}>Home Battery</span>
                                          {!batteryAddon?.enabled && (
                                            <span className="text-xs text-gray-400">(Not included)</span>
                                          )}
                                        </div>
                                      </div>
                                      <span className={cn(
                                        "font-semibold",
                                        batteryAddon?.enabled
                                          ? "text-green-700"
                                          : "text-gray-400"
                                      )}>
                                        {batteryAddon?.enabled && batteryAddon.monthlyContribution
                                          ? `+€${batteryAddon.monthlyContribution[selectedTerm as keyof typeof batteryAddon.monthlyContribution]}/month`
                                          : "€0/month"
                                        }
                                      </span>
                                    </div>
                                  );
                                })()}

                                {/* EV Charger */}
                                {(() => {
                                  const evAddon = addons.find(a => a.name === "EV Charger");
                                  return (
                                    <div className={cn(
                                      "flex items-center justify-between p-3 rounded-xl border transition-all",
                                      evAddon?.enabled
                                        ? "bg-gradient-to-r from-blue-50 to-indigo-50 border-blue-100"
                                        : "bg-gray-50 border-gray-100"
                                    )}>
                                      <div className="flex items-center gap-3">
                                        <div className={cn(
                                          "w-8 h-8 rounded-lg flex items-center justify-center",
                                          evAddon?.enabled
                                            ? "bg-blue-100"
                                            : "bg-gray-100"
                                        )}>
                                          <Car className={cn(
                                            "w-4 h-4",
                                            evAddon?.enabled
                                              ? "text-blue-600"
                                              : "text-gray-400"
                                          )} />
                                        </div>
                                        <div className="flex flex-col">
                                          <span className={cn(
                                            "font-medium",
                                            evAddon?.enabled
                                              ? "text-gray-700"
                                              : "text-gray-500"
                                          )}>EV Charger</span>
                                          {!evAddon?.enabled && (
                                            <span className="text-xs text-gray-400">(Not included)</span>
                                          )}
                                        </div>
                                      </div>
                                      <span className={cn(
                                        "font-semibold",
                                        evAddon?.enabled
                                          ? "text-blue-700"
                                          : "text-gray-400"
                                      )}>
                                        {evAddon?.enabled && evAddon.monthlyContribution
                                          ? `+€${evAddon.monthlyContribution[selectedTerm as keyof typeof evAddon.monthlyContribution]}/month`
                                          : "€0/month"
                                        }
                                      </span>
                                    </div>
                                  );
                                })()}
                              </div>
                            </div>

                            {/* Divider */}
                            <div className="px-6">
                              <div className="h-px bg-gradient-to-r from-transparent via-gray-200 to-transparent"></div>
                            </div>

                            {/* Total Section */}
                            <div className="p-4 bg-gradient-to-br from-green-500 to-emerald-600 text-white">
                              <div className="flex items-center">
                                <div className="w-10 h-10 bg-white/20 rounded-lg flex items-center justify-center backdrop-blur-sm mr-3">
                                  <Zap className="w-5 h-5 text-white" />
                                </div>
                                <div className="flex-1 flex items-center justify-between">
                                  <div>
                                    <h3 className="text-base font-semibold leading-tight">Total System Investment</h3>
                                    <p className="text-green-100 text-xs">Complete solar solution for your home</p>
                                    <div className="text-sm mt-1">
                                      <span className="text-green-100">Total </span>
                                      <span className="font-semibold">€{systemCost.toLocaleString()}</span>
                                    </div>
                                    <p className="text-green-100 text-xs mt-1">
                                      *Excludes grants. Average installer pricing.
                                    </p>
                                  </div>
                                  <div className="text-right ml-2 flex flex-col justify-center">
                                    <div className="text-2xl font-bold leading-none">€{selectedLoan.monthlyPayment}</div>
                                    <div className="text-green-100 text-xs">/month</div>
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>

                      <div className="space-y-4">
                        {/* Enhanced Loan Details */}
                        <div className="bg-white rounded-2xl p-6 shadow-xl border border-gray-100">
                          <div className="flex items-center gap-3 mb-4">
                            <div className="w-10 h-10 bg-gradient-to-br from-blue-500 to-indigo-600 rounded-xl flex items-center justify-center shadow-lg">
                              <CreditCard className="h-5 w-5 text-white" />
                            </div>
                            <h3 className="text-xl font-bold text-gray-900 text-left">Loan Details</h3>
                          </div>
                          
                          <div className="mb-6 bg-gradient-to-r from-emerald-50 to-green-50 border-2 border-emerald-200 rounded-xl p-4">
                            <div className="flex items-center gap-3 mb-2">
                              <div className="w-8 h-8 rounded-full bg-emerald-500 flex items-center justify-center shadow-lg">
                                <span className="text-white font-bold text-sm">€0</span>
                              </div>
                              <span className="text-lg font-bold text-emerald-900 text-left">Zero Down Payment Required</span>
                            </div>
                            <p className="text-emerald-700 font-medium text-left">
                              Get your complete solar system installed with absolutely no money out of pocket
                            </p>
                          </div>
                          
                          <button
                            onClick={() => setIsLoanDetailsExpanded(!isLoanDetailsExpanded)}
                            className="w-full flex items-center justify-between p-4 rounded-xl border-2 border-gray-200 hover:border-emerald-200 hover:bg-emerald-50/50 transition-all duration-300 group shadow-md hover:shadow-lg"
                          >
                            <span className="font-semibold text-gray-900 group-hover:text-emerald-900">View Complete Loan Details</span>
                            <ChevronDown
                              className={cn(
                                "h-5 w-5 text-gray-500 group-hover:text-emerald-600 transition-all duration-300",
                                isLoanDetailsExpanded ? "transform rotate-180" : ""
                              )}
                            />
                          </button>
                          
                          <div
                            className={cn(
                              "overflow-hidden transition-all duration-500 ease-in-out",
                              isLoanDetailsExpanded ? "max-h-[600px] opacity-100 mt-6" : "max-h-0 opacity-0"
                            )}
                          >
                            <div className="space-y-6">
                              <div className="bg-gradient-to-br from-gray-50 to-slate-50 rounded-xl border border-gray-200 p-6 shadow-md">
                                <h5 className="font-bold text-gray-900 mb-4 flex items-center gap-2">
                                  <Info className="h-5 w-5 text-blue-500" />
                                  Financial Breakdown
                                </h5>
                                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                                  <div className="bg-white p-4 rounded-xl border border-gray-100 shadow-sm text-center">
                                    <div className="text-sm text-gray-600 mb-1">Total System Cost</div>
                                    <div className="text-xl font-bold text-gray-900">€{systemCost.toLocaleString()}</div>
                                    <div className="text-xs text-gray-500 mt-1">*Excludes grants</div>
                                  </div>
                                  {isCustomized && selectedLoan.downPayment > 0 && (
                                    <div className="bg-white p-4 rounded-xl border border-gray-100 shadow-sm text-center">
                                      <div className="text-sm text-gray-600 mb-1">Down Payment</div>
                                      <div className="text-xl font-bold text-gray-900">€{selectedLoan.downPayment.toLocaleString()}</div>
                                    </div>
                                  )}
                                  <div className="bg-white p-4 rounded-xl border border-gray-100 shadow-sm text-center">
                                    <div className="text-sm text-gray-600 mb-1">Interest Rate</div>
                                    <div className="text-xl font-bold text-blue-600">{selectedLoan.interestRate}% APR</div>
                                  </div>
                                  <div className="bg-white p-4 rounded-xl border border-gray-100 shadow-sm text-center">
                                    <div className="text-sm text-gray-600 mb-1">Loan Term</div>
                                    <div className="text-xl font-bold text-gray-900">{selectedLoan.term} years</div>
                                  </div>
                                  <div className="bg-white p-4 rounded-xl border border-gray-100 shadow-sm text-center">
                                    <div className="text-sm text-gray-600 mb-1">Total Interest</div>
                                    <div className="text-xl font-bold text-gray-900">€{selectedLoan.totalInterest.toLocaleString()}</div>
                                  </div>
                                  <div className="bg-white p-4 rounded-xl border border-gray-100 shadow-sm text-center">
                                    <div className="text-sm text-gray-600 mb-1">Total Investment</div>
                                    <div className="text-xl font-bold text-emerald-600">€{selectedLoan.totalCost.toLocaleString()}</div>
                                    <div className="text-xs text-gray-500 mt-1">*Excludes grants</div>
                                  </div>
                                </div>
                              </div>

                              <div className="bg-gradient-to-br from-blue-50 to-indigo-50 rounded-xl border-2 border-blue-200 p-6 shadow-lg">
                                <div className="flex items-center gap-2 mb-4">
                                  <Calendar className="h-6 w-6 text-blue-600" />
                                  <h5 className="text-lg font-bold text-blue-900">Loan Benefits & Features</h5>
                                </div>
                                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                                  <div className="flex items-start gap-3">
                                    <div className="w-6 h-6 bg-blue-500 rounded-full flex items-center justify-center mt-0.5 shadow-md">
                                      <Check className="h-3 w-3 text-white" />
                                    </div>
                                    <span className="text-blue-800 font-medium text-left">No prepayment penalties</span>
                                  </div>
                                  <div className="flex items-start gap-3">
                                    <div className="w-6 h-6 bg-blue-500 rounded-full flex items-center justify-center mt-0.5 shadow-md">
                                      <Check className="h-3 w-3 text-white" />
                                    </div>
                                    <span className="text-blue-800 font-medium text-left">Fixed rate for entire term</span>
                                  </div>
                                  <div className="flex items-start gap-3">
                                    <div className="w-6 h-6 bg-blue-500 rounded-full flex items-center justify-center mt-0.5 shadow-md">
                                      <Check className="h-3 w-3 text-white" />
                                    </div>
                                    <span className="text-blue-800 font-medium text-left">Quick online application</span>
                                  </div>
                                  <div className="flex items-start gap-3">
                                    <div className="w-6 h-6 bg-blue-500 rounded-full flex items-center justify-center mt-0.5 shadow-md">
                                      <Check className="h-3 w-3 text-white" />
                                    </div>
                                    <span className="text-blue-800 font-medium text-left">Credit union backed</span>
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>

                        {/* Enhanced Smart Investment Tip */}
                        {/* <div className="bg-gradient-to-br from-amber-50 via-yellow-50 to-orange-50 rounded-2xl border-2 border-amber-200 p-6 shadow-xl">
                          <div className="flex items-center gap-3 mb-4">
                            <div className="w-10 h-10 bg-gradient-to-br from-amber-500 to-yellow-600 rounded-xl flex items-center justify-center shadow-lg">
                              <Info className="h-5 w-5 text-white" />
                            </div>
                            <h4 className="text-xl font-bold text-amber-900 text-left">Smart Investment Strategy</h4>
                          </div>
                          <p className="text-amber-800 leading-relaxed font-medium text-left">
                            Solar financing often provides better returns than traditional investments. 
                            With immediate energy savings and tax benefits, you're investing in both 
                            your home's value and environmental future while keeping your cash available 
                            for other opportunities.
                          </p>
                        </div> */}
                      </div>
                    </div>

                    {/* Enhanced Qualification Indicator */}
                    {/* <div className="mt-8 relative overflow-hidden rounded-2xl border-2 border-emerald-300 bg-gradient-to-br from-emerald-50 via-white to-green-50 p-6 shadow-xl">
                      <div className="absolute top-0 right-0 w-32 h-32 bg-emerald-200 rounded-full blur-2xl opacity-20 transform translate-x-16 -translate-y-16"></div>
                      
                      <div className="relative z-10 flex items-center justify-between">
                        <div className="flex items-center gap-4">
                          <div className="w-12 h-12 bg-emerald-500 rounded-full flex items-center justify-center shadow-lg animate-pulse">
                            <Check className="h-6 w-6 text-white" />
                          </div>
                          <div>
                            <h4 className="text-xl font-bold text-emerald-900 flex items-center gap-2 text-left">
                              Excellent Pre-Qualification Status
                              <TooltipProvider>
                                <Tooltip>
                                  <TooltipTrigger>
                                    <Info className="h-5 w-5 text-emerald-600 cursor-help" />
                                  </TooltipTrigger>
                                  <TooltipContent className="max-w-xs">
                                    <p className="text-sm">
                                      This is a preliminary assessment based on typical approval criteria. 
                                      Final approval requires credit check and income verification.
                                    </p>
                                  </TooltipContent>
                                </Tooltip>
                              </TooltipProvider>
                            </h4>
                            <p className="text-emerald-700 font-medium text-left">
                              Based on your system selection, you're likely to qualify for this green energy loan
                            </p>
                          </div>
                        </div>
                        <div className="hidden md:block">
                          <div className="bg-emerald-100 border border-emerald-300 rounded-xl px-4 py-2 text-center">
                            <div className="text-sm text-emerald-700 font-medium">Approval Rate</div>
                            <div className="text-2xl font-bold text-emerald-600">95%</div>
                          </div>
                        </div>
                      </div>
                    </div> */}
                  </CardContent>
                </Card>
              </TabsContent>
            </Tabs>

            {/* Enhanced Action Buttons */}
            <div className="flex flex-col md:flex-row gap-4 md:gap-6">
              <Button
                onClick={handleContinue}
                size="lg"
                className="flex-1 bg-gradient-to-r from-emerald-600 via-green-600 to-teal-600 hover:from-emerald-700 hover:via-green-700 hover:to-teal-700 text-white py-4 md:py-6 text-base md:text-lg font-bold rounded-xl md:rounded-2xl shadow-2xl hover:shadow-3xl transition-all duration-300 hover:-translate-y-1 border-2 border-emerald-400"
              >
                <span className="flex items-center justify-center gap-2 md:gap-3">
                  <span className="hidden sm:inline">Continue to </span>Next Step
                  <ArrowRight className="h-5 w-5 md:h-6 md:w-6" />
                </span>
              </Button>
              <Button
                onClick={handleContinue}
                size="lg"
                variant="outline"
                className="flex-1 py-4 md:py-6 text-base md:text-lg font-bold rounded-xl md:rounded-2xl shadow-xl hover:shadow-2xl transition-all duration-300 hover:-translate-y-1 border-2 border-emerald-200 hover:border-emerald-300 hover:bg-emerald-50 text-emerald-700"
              >
                <span className="flex items-center justify-center gap-2 md:gap-3">
                  <Download className="h-5 w-5 md:h-6 md:w-6" />
                  <span className="hidden sm:inline">Download </span>Download Plan
                </span>
              </Button>
            </div>

            {/* Compact Grant Information Card */}
            <div className="w-full max-w-2xl mx-auto">
              <div className="relative overflow-hidden rounded-xl bg-gradient-to-r from-amber-100 to-yellow-100 border-2 border-amber-300 shadow-lg">
                <div className="absolute top-0 right-0 w-16 h-16 bg-amber-200 rounded-full blur-xl opacity-40 transform translate-x-8 -translate-y-8"></div>
                
                <div className="relative z-10 p-4 md:p-6">
                  <div className="flex items-center gap-3 mb-3">
                    <div className="w-10 h-10 bg-gradient-to-br from-amber-500 to-yellow-600 rounded-xl flex items-center justify-center shadow-lg">
                      <PiggyBank className="h-5 w-5 text-white" />
                    </div>
                    <div className="flex-1">
                      <div className="flex items-center gap-2 mb-1">
                        <h3 className="text-lg font-bold text-amber-900">Grant Paid at Installation!</h3>
                        <div className="bg-amber-500 text-white px-2 py-1 rounded-full text-xs font-bold">
                          INSTANT CASH
                        </div>
                      </div>
                      <p className="text-amber-800 text-sm font-medium">Get money back before you pay anything</p>
                    </div>
                  </div>

                  <button
                    onClick={() => setIsGrantDetailsExpanded(!isGrantDetailsExpanded)}
                    className="w-full flex items-center justify-between p-3 rounded-lg border border-amber-300 hover:border-amber-400 hover:bg-amber-50 transition-all duration-300 group"
                  >
                    <span className="text-amber-900 font-medium text-sm flex items-center gap-2">
                      <Info className="h-4 w-4" />
                      Eligibility: Homes built before 2021
                    </span>
                    <ChevronDown
                      className={cn(
                        "h-4 w-4 text-amber-700 transition-all duration-300",
                        isGrantDetailsExpanded ? "transform rotate-180" : ""
                      )}
                    />
                  </button>

                  <div
                    className={cn(
                      "overflow-hidden transition-all duration-500 ease-in-out",
                      isGrantDetailsExpanded ? "max-h-[200px] opacity-100 mt-4" : "max-h-0 opacity-0"
                    )}
                  >
                    <div className="bg-white/80 rounded-lg p-4 border border-amber-200">
                      <div className="space-y-3">
                        <div className="flex items-start gap-2">
                          <div className="w-5 h-5 bg-emerald-500 rounded-full flex items-center justify-center mt-0.5">
                            <Check className="h-2 w-2 text-white" />
                          </div>
                          <div>
                            <p className="text-sm font-semibold text-gray-900">Immediate Cash Back</p>
                            <p className="text-xs text-gray-600">Grant money paid at installation stage</p>
                          </div>
                        </div>
                        <div className="flex items-start gap-2">
                          <div className="w-5 h-5 bg-blue-500 rounded-full flex items-center justify-center mt-0.5">
                            <Calendar className="h-2 w-2 text-white" />
                          </div>
                          <div>
                            <p className="text-sm font-semibold text-gray-900">Eligibility</p>
                            <p className="text-xs text-gray-600">Home built & occupied before 31st Dec 2020</p>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </main>
      <AvatarAssistant step={1} pageType="financing" />

      {/* Customize Financing Modal - Enhanced Mobile */}
      {showCustomizeModal && (
        <div className="fixed inset-0 z-50 flex items-center justify-center bg-black/50 backdrop-blur-sm p-4">
          <div className="relative w-full max-w-md max-h-[90vh] overflow-y-auto rounded-xl md:rounded-lg bg-white shadow-xl">
            <div className="sticky top-0 bg-white p-4 md:p-6 border-b border-gray-200 rounded-t-xl md:rounded-t-lg">
              <button
                onClick={handleCloseCustomize}
                className="absolute right-3 top-3 md:right-4 md:top-4 rounded-full p-1.5 md:p-1 text-gray-400 hover:bg-gray-100 hover:text-gray-600"
              >
                <X className="h-5 w-5" />
              </button>

              <div className="text-left">
                <h2 className="text-lg md:text-xl font-bold text-gray-900">Customize Your Financing</h2>
                <p className="mt-1 text-sm text-gray-600">Adjust your loan terms to fit your budget</p>
              </div>
            </div>

            <div className="p-4 md:p-6 space-y-6">
              <div className="space-y-4">
                <div>
                  <Label htmlFor="down-payment" className="mb-2 block text-sm font-medium">
                    Down Payment (€)
                  </Label>
                  <div className="flex items-center">
                    <Button
                      type="button"
                      variant="outline"
                      size="icon"
                      onClick={decrementDownPayment}
                      className="h-10 w-10 rounded-r-none flex-shrink-0"
                      disabled={customDownPayment <= 0}
                    >
                      <Minus className="h-4 w-4" />
                    </Button>
                    <Input
                      id="down-payment"
                      type="number"
                      min="0"
                      max={systemCost}
                      value={customDownPayment}
                      onChange={(e) => setCustomDownPayment(Number(e.target.value))}
                      onFocus={(e) => {
                        if (customDownPayment === 0) {
                          setCustomDownPayment(NaN)
                          setTimeout(() => (e.target as HTMLInputElement).value = '', 0)
                        }
                      }}
                      onBlur={(e) => {
                        const value = Number(e.target.value)
                        if (isNaN(value) || e.target.value === '') {
                          setCustomDownPayment(0)
                        }
                      }}
                      className="h-10 rounded-none text-center text-sm md:text-base"
                    />
                    <Button
                      type="button"
                      variant="outline"
                      size="icon"
                      onClick={incrementDownPayment}
                      className="h-10 w-10 rounded-l-none flex-shrink-0"
                      disabled={customDownPayment >= systemCost}
                    >
                      <Plus className="h-4 w-4" />
                    </Button>
                  </div>
                  <div className="flex justify-between text-xs text-gray-500 mt-1">
                    <span>Min: €0</span>
                    <span>Max: €{systemCost.toLocaleString()}</span>
                  </div>
                </div>

                <div>
                  <Label htmlFor="loan-term" className="mb-2 block text-sm font-medium">
                    Loan Term (Years)
                  </Label>
                  <div className="flex items-center">
                    <Button
                      type="button"
                      variant="outline"
                      size="icon"
                      onClick={decrementTerm}
                      className="h-10 w-10 rounded-r-none flex-shrink-0"
                      disabled={customTerm <= 1}
                    >
                      <Minus className="h-4 w-4" />
                    </Button>
                    <Input
                      id="loan-term"
                      type="number"
                      min="1"
                      max="30"
                      value={customTerm}
                      onChange={(e) => {
                        const value = Number.parseInt(e.target.value)
                        if (!isNaN(value) && value > 0 && value <= 30) {
                          setCustomTerm(value)
                        }
                      }}
                      onFocus={(e) => {
                        if (customTerm === 5) {
                          setCustomTerm(NaN)
                          setTimeout(() => (e.target as HTMLInputElement).value = '', 0)
                        }
                      }}
                      onBlur={(e) => {
                        const value = Number(e.target.value)
                        if (isNaN(value) || e.target.value === '' || value < 1) {
                          setCustomTerm(5)
                        }
                      }}
                      className="h-10 rounded-none text-center text-sm md:text-base"
                    />
                    <Button
                      type="button"
                      variant="outline"
                      size="icon"
                      onClick={incrementTerm}
                      className="h-10 w-10 rounded-l-none flex-shrink-0"
                      disabled={customTerm >= 30}
                    >
                      <Plus className="h-4 w-4" />
                    </Button>
                  </div>
                  <div className="flex justify-between text-xs text-gray-500 mt-1">
                    <span>Min: 1 year</span>
                    <span>Max: 30 years</span>
                  </div>
                </div>
              </div>

              <div className="rounded-lg bg-gray-50 p-4">
                <h4 className="font-medium text-sm md:text-base text-left">Estimated Monthly Payment</h4>
                <div className="mt-2 flex flex-col sm:flex-row sm:items-end sm:justify-between gap-2">
                  <div className="text-left">
                    <p className="text-sm text-gray-600">Based on your selections</p>
                    <p className="text-xs text-gray-500 mt-1">
                      {customDownPayment > 0
                        ? `€${customDownPayment.toLocaleString()} down payment`
                        : "No down payment"}
                    </p>
                  </div>
                  <p className="text-xl md:text-2xl font-bold text-green-600 text-right">
                    €{Math.round((systemCost - customDownPayment) / (customTerm * 12))}<span className="text-sm md:text-base">/mo</span>
                  </p>
                </div>
              </div>
            </div>

            <div className="sticky bottom-0 bg-white p-4 md:p-6 border-t border-gray-200 rounded-b-xl md:rounded-b-lg">
              <div className="flex gap-3">
                <Button onClick={handleCloseCustomize} variant="outline" className="flex-1 text-sm md:text-base">
                  Cancel
                </Button>
                <Button onClick={handleSaveCustomOptions} className="flex-1 bg-green-600 hover:bg-green-700 text-sm md:text-base">
                  Save Changes
                </Button>
              </div>
            </div>
          </div>
        </div>
      )}
      {/* Signup Modal */}
      <SignupModal
        isOpen={showSignupModal}
        onClose={handleCloseModal}
        onSignup={handleSignup}
        showSkip={true}
        onSkip={handleSkipSignup}
      />
    </div>
  )
}
